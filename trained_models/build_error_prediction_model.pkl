import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import pickle

# Load the historical data from build_logs.csv
df = pd.read_csv('build_logs.csv')

# Preprocess the data
df['build_status'] = df['build_status'].map({'Success': 0, 'Fail': 1})  # Convert to numerical labels

# Define features (X) and target (y)
X = df[['build_duration', 'dependency_changes', 'failed_previous_builds']]
y = df['build_status']

# Split into training and testing datasets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Random Forest model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Test the model
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Model Accuracy: {accuracy * 100:.2f}%')

# Save the trained model
with open('build_error_prediction_model.pkl', 'wb') as f:
    pickle.dump(model, f)
